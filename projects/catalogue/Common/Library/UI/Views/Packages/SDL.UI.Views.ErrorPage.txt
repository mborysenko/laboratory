/*507,1751,2233,1022*/{
	"views.errorpage.title": "Oops! An Error Occured",
	"views.errorpage.showDetails": "Show Details",
	"views.errorpage.hideDetails": "Hide Details",
	"views.errorpage.copyright": "Copyright Â© 1999-2014 SDL Group.",
	"views.errorpage.terms": "All rights reserved. Use of this computer program is subject to license.Any reproduction, distribution or use of this program or any portion of it other than as authorized by its owner is strictly prohibited and may result in civil and criminal penalties."
}.errorpage {
  width: 100%;
  height: 515px;
  background-image: url(Images/error_background_001.png{VERSION});
  background-position: center top;
  background-repeat: no-repeat;
  background-color: #ededed;
  border-bottom: solid 1px #cfcfcf;
  position: relative;
}
.errorpage .main {
  width: 570px;
  height: 530px;
  margin: 0 auto;
  background-image: url(Images/plug_image.png{VERSION}), url(Images/SDL_logo.jpg{VERSION});
  background-repeat: no-repeat, no-repeat;
  background-position: 67px 197px, right 70px;
  padding-top: 70px;
  position: relative;
  -webkit-text-shadow: 1px 1px #ffffff;
  -moz-text-shadow: 1px 1px #ffffff;
  -ms-text-shadow: 1px 1px #ffffff;
  -o-text-shadow: 1px 1px #ffffff;
  text-shadow: 1px 1px #ffffff;
}
.errorpage .title {
  font-size: 23px;
  color: #296acc;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
.errorpage .description {
  font-size: 14px;
  margin-top: 10px;
  max-height: 244px;
  overflow: hidden;
  text-overflow: ellipsis;
}
.errorpage .description.oneline {
  white-space: nowrap;
  height: 14px;
}
.errorpage .actions {
  height: 20px;
  margin-top: 15px;
}
.errorpage .actions a {
  color: #296acc;
  font-size: 11px;
  margin-right: 10px;
  cursor: pointer;
}
.errorpage .details {
  width: 100%;
  height: 207px;
  margin-top: 15px;
  resize: none;
}
.errorpage .content {
  position: absolute;
  width: 370px;
  top: 197px;
  left: 200px;
  max-height: 316px;
}
.errorpage .content.showdetails #showDetails,
.errorpage .content.hidedetails #hideDetails,
.errorpage .content.hidedetails #details {
  display: none;
}
.errorpage .content.showdetails #description {
  white-space: nowrap;
}
.errorpage .footer {
  position: absolute;
  bottom: 0;
  width: 100%;
}
/// <reference path="../../../SDL.Client.UI.Core/Views/ViewBase.d.ts" />
/// <reference path="../../../SDL.Client.UI.Core.Knockout/ViewModels/ViewModelBase.d.ts" />
var __extends = this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    __.prototype = b.prototype;
    d.prototype = new __();
};
var SDL;
(function (SDL) {
    (function (UI) {
        (function (Views) {
            eval(SDL.Client.Types.OO.enableCustomInheritance);
            var ErrorPage = (function (_super) {
                __extends(ErrorPage, _super);
                function ErrorPage() {
                    _super.apply(this, arguments);
                }
                ErrorPage.prototype.getRenderOptions = function () {
                    var model = this._viewModel = new SDL.UI.Core.Knockout.ViewModels.ViewModelBase();
                    model.title = this.properties.settings.title || null;
                    model.description = this.properties.settings.description || null;
                    model.details = this.properties.settings.details || null;

                    model.detailsShown = ko.observable(false);
                    model.showDetails = function () {
                        model.detailsShown(true);
                    };
                    model.hideDetails = function () {
                        model.detailsShown(false);
                    };

                    return model;
                };
                return ErrorPage;
            })(SDL.UI.Core.Views.ViewBase);
            Views.ErrorPage = ErrorPage;

            ErrorPage.prototype.disposeInterface = SDL.Client.Types.OO.nonInheritable(function disposeInterface() {
                if (this._viewModel) {
                    this._viewModel.dispose();
                    this._viewModel = null;
                }
            });

            SDL.Client.Types.OO.createInterface("SDL.UI.Views.ErrorPage", ErrorPage);
        })(UI.Views || (UI.Views = {}));
        var Views = UI.Views;
    })(SDL.UI || (SDL.UI = {}));
    var UI = SDL.UI;
})(SDL || (SDL = {}));
//# sourceMappingURL=ErrorPage.js.map
<script id="SDL.UI.Views.ErrorPage" type="text/html+knockout">
<div class="errorpage">
	<div class="main">
		<div class="content" class="hidedetails">
			<div class="title" data-bind="text: title || localize('views.errorpage.title')"></div>
			<div class="description" data-bind="text: description, css: { oneline: detailsShown() }"></div>
			<textarea readonly class="details" data-bind="text: details, visible: detailsShown()"></textarea>
			<div class="actions">
				<a href="javascript:;" class="hideDetails" data-bind="visible: detailsShown(), text: localize('views.errorpage.hideDetails'), click: hideDetails"></a>
				<a href="javascript:;" class="showDetails" data-bind="visible: !detailsShown(), text: localize('views.errorpage.showDetails'), click: showDetails"></a>
			</div>
		</div>
		<div class="footer">
			<span data-bind="html: localize('views.errorpage.copyright')"></span>
			<br/>
			<span data-bind="html: localize('views.errorpage.terms')"></span>
		</div>
	</div>
</div>
</script>